import PropTypes from 'prop-types';
import { memo } from 'react';

function Icon(props) {
    const { color, type } = props;

    switch (type) {
        case 'cart':
            return (<svg xmlns="http://www.w3.org/2000/svg" fill={color} height="24" width="24"><path d="M7 22q-.825 0-1.412-.587Q5 20.825 5 20q0-.825.588-1.413Q6.175 18 7 18t1.412.587Q9 19.175 9 20q0 .825-.588 1.413Q7.825 22 7 22Zm10 0q-.825 0-1.412-.587Q15 20.825 15 20q0-.825.588-1.413Q16.175 18 17 18t1.413.587Q19 19.175 19 20q0 .825-.587 1.413Q17.825 22 17 22ZM6.15 6l2.4 5h7l2.75-5ZM5.2 4h14.75q.575 0 .875.512.3.513.025 1.038l-3.55 6.4q-.275.5-.738.775Q16.1 13 15.55 13H8.1L7 15h12v2H7q-1.125 0-1.7-.988-.575-.987-.05-1.962L6.6 11.6 3 4H1V2h3.25Zm3.35 7h7Z" /></svg>);
        case 'star':
            return (<svg xmlns="http://www.w3.org/2000/svg" fill={color} height="24" width="24"><path d="M8.8 17.875 12 15.95l3.2 1.95-.825-3.65 2.825-2.425-3.725-.35L12 8.025l-1.45 3.45-3.725.325 2.825 2.45Zm-.975 1.35 1.125-4.75-3.7-3.175 4.85-.425L12 6.4l1.925 4.475 4.825.425-3.675 3.175 1.125 4.75L12 16.7Zm4.175-6Z" /></svg>);
        case 'star-fill':
            return (<svg xmlns="http://www.w3.org/2000/svg" fill={color} height="24" width="24"><path d="m7.825 19.225 1.125-4.75-3.7-3.175 4.85-.425L12 6.4l1.925 4.475 4.825.425-3.675 3.175 1.125 4.75L12 16.7Z" /></svg>);
        case 'star-fill-big':
            return (<svg xmlns="http://www.w3.org/2000/svg" fill={color} height="30" viewBox="0 96 960 960" width="30"><path d="m293 892.924 49.615-212.539-164.923-142.847 217.231-18.846L480 318.307l85.077 200.385 217.231 18.846-164.923 142.847L667 892.924 480 780.077 293 892.924Z"/></svg>);
        case 'album':
            return (<svg xmlns="http://www.w3.org/2000/svg" fill={color} height="48" width="48"><path d="M24 32.2q3.5 0 6-2.375T32.5 24q0-3.55-2.475-6.025Q27.55 15.5 24 15.5q-3.45 0-5.825 2.5T15.8 24q0 3.45 2.375 5.825T24 32.2Zm0-6.2q-.85 0-1.425-.575Q22 24.85 22 24q0-.85.575-1.425Q23.15 22 24 22q.85 0 1.425.575Q26 23.15 26 24q0 .85-.575 1.425Q24.85 26 24 26Zm0 18q-4.1 0-7.75-1.575-3.65-1.575-6.375-4.3-2.725-2.725-4.3-6.375Q4 28.1 4 24q0-4.15 1.575-7.8 1.575-3.65 4.3-6.35 2.725-2.7 6.375-4.275Q19.9 4 24 4q4.15 0 7.8 1.575 3.65 1.575 6.35 4.275 2.7 2.7 4.275 6.35Q44 19.85 44 24q0 4.1-1.575 7.75-1.575 3.65-4.275 6.375t-6.35 4.3Q28.15 44 24 44Zm0-3q7.1 0 12.05-4.975Q41 31.05 41 24q0-7.1-4.95-12.05Q31.1 7 24 7q-7.05 0-12.025 4.95Q7 16.9 7 24q0 7.05 4.975 12.025Q16.95 41 24 41Zm0-17Z" /></svg>);
        case 'headphones':
            return (<svg xmlns="http://www.w3.org/2000/svg" fill={color} height="48" width="48"><path d="M16.4 42H9q-1.2 0-2.1-.9Q6 40.2 6 39V24q0-3.75 1.425-7.025 1.425-3.275 3.85-5.7 2.425-2.425 5.7-3.85Q20.25 6 24 6q3.75 0 7.025 1.425 3.275 1.425 5.7 3.85 2.425 2.425 3.85 5.7Q42 20.25 42 24v15q0 1.2-.9 2.1-.9.9-2.1.9h-7.4V27.2H39V24q0-6.25-4.375-10.625T24 9q-6.25 0-10.625 4.375T9 24v3.2h7.4Zm-3-11.8H9V39h4.4Zm21.2 0V39H39v-8.8Zm0 0H39h-4.4Zm-21.2 0H9Z" /></svg>);
        case 'notebook':
            return (<svg xmlns="http://www.w3.org/2000/svg" fill={color} height="48" width="48"><path d="m21.75 35.75-6.2-6.15 1.5-1.5 4.7 4.6 8.95-9 1.55 1.55Zm-11.8 7.1q-1.15 0-1.975-.85-.825-.85-.825-1.95V11.2q0-1.15.825-1.975Q8.8 8.4 9.95 8.4h3.75V4.9h2.45v3.5H31.9V4.9h2.4v3.5h3.75q1.15 0 1.975.825.825.825.825 1.975v28.85q0 1.1-.825 1.95-.825.85-1.975.85Zm0-2.2h28.1q.25 0 .425-.2t.175-.4V20.3H9.35v19.75q0 .2.175.4t.425.2Zm-.6-22.55h29.3v-6.9q0-.25-.175-.425t-.425-.175H9.95q-.25 0-.425.175t-.175.425Zm0 0v-7.5 7.5Z" /></svg>);
        case 'comment':
            return (<svg xmlns="http://www.w3.org/2000/svg" fill={color} height="20" width="20"><path d="M2.854 16.083V4.125q0-.542.365-.917.364-.375.906-.375h11.75q.542 0 .906.375.365.375.365.917v8.417q0 .541-.365.906-.364.364-.906.364H5.125Z" /></svg>);
        case 'arrow':
            return (<svg xmlns="http://www.w3.org/2000/svg" fill={color} height="20" width="20"><path d="m6.062 12.438-.479-.48L10 7.521l4.417 4.437-.479.48L10 8.5Z" /></svg>);
        default:
            return null
    }
}


Icon.propTypes = {
    type: PropTypes.string.isRequired,
    color: PropTypes.string
}

Icon.defaultProps = {
    color: '#000'
}

export default memo(Icon);